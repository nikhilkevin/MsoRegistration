{"version":3,"sources":["main_logo_left.png","Helpers/fetch-helpers.js","Services/msoregistration-api.js","Settings/ApiSettings.js","components/PageHeader.js","components/controls/Button.js","components/controls/ActionButton.js","components/controls/Controls.js","components/controls/Input.js","components/controls/RadioGroup.js","components/controls/Select.js","components/controls/Checkbox.js","components/controls/DatePicker.js","components/BoxHeader.js","components/alerts/PopulateInfo.js","pages/RegistrationDetails.jsx","pages/CompanyDetails.jsx","pages/AddressDetails.jsx","pages/SubmissionRoute.jsx","pages/ContactDetails.jsx","pages/ConfirmationDetails.jsx","Scripts/RoutesData.js","Scripts/RegistrationScripts.js","Models/RegistrationModel.js","components/Header.js","components/SideNav.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","RequestBase","requestbody","window","method","mode","headers","Headers","Accept","Content-Type","ApiKey","body","JSON","stringify","instance","Object","freeze","apiBase","apiVersion","MsoRegistrationService","apipath","requestbase","SetBody","request","assign","url","console","log","fetch","response","getTitle","id","title","getRole","getBrands","PageHeader","props","react_default","a","createElement","Grid","columns","container","Typography","sx","m","variant","useStyles","styled","theme","root","margin","spacing","label","textTransform","minWidth","secondary","backgroundColor","palette","light","& .MuiButton-label","color","main","primary","Controls","Input","name","value","_props$error","error","onChange","other","objectWithoutProperties","item","xs","sm","md","lg","TextField","size","helperText","RadioGroup","items","FormControl","FormLabel","row","map","FormControlLabel","key","control","Radio","Select","isMobile","useMediaQuery","query","options","InputLabel","MenuItem","FormHelperText","Checkbox","checked","e","target","convertToDefEventPara","DatePickers","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","inputFormat","renderInput","params","mb","Button","text","onClick","classes","ActionButton","children","className","concat","BoxHeader","mx","bgcolor","borderTopLeftRadius","borderTopRightRadius","PopulateInfo","_props$titles","titles","_props$outlined","outlined","_props$severity","severity","Alert","border","padding","RegistrationDetails","_ref","NavigateToNext","state","FormState","setState","setFormDataState","handleChange","event","prev","_objectSpread3","objectSpread","defineProperty","errorMessage","_React$useState","React","useState","_React$useState2","slicedToArray","fcaStatus","setFcaStatus","_React$useState3","_React$useState4","continuebuttondisabled","setContinueButtonStatus","_React$useState5","_React$useState6","fcabuttonloading","setFcabuttonloading","_React$useState7","_React$useState8","continuebuttonloading","Setcontinuebutton","navigate","useNavigate","Box","component","& .MuiTextField-root","width","display","noValidate","autoComplete","Paper","controls_Controls","Title","type","firstName","Surname","date","Role","Brand","CompanyFCAnumber","LoadingButton","startIcon","Search_default","loading","loadingPosition","disabled","post","then","ok","catch","err","Send_default","entries","_ref2","_ref3","handleChangeEvent","caption","TitleCaption","firstname","surname","dateOfBirth","role","RoleCaption","brand","BrandCaption","fcaNumber","CompanyNameRoute","RouteNumber","RouteName","companyDetails","AddressRoute","addressDetails","ContactRoute","submissionRoute","ConfirmationRoute","contactDetails","SubmissionPageRoute","confirmationtDetails","RoutesData","menuitem","menucaption","menupath","icon","react","AppRegistration_default","routedata","pages_RegistrationDetails","selected","Business_default","CompanyDetails","ImportContacts_default","AddressDetails","Contacts_default","ContactDetails","Directions_default","SubmissionRoute","ConfirmationNumber_default","ConfirmationDetails","Router","server","location","react_router","initialEntries","initialIndex","openedMixin","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","breakpoints","up","DrawerHeader","alignItems","justifyContent","mixins","toolbar","Drawer","MuiDrawer","shouldForwardProp","prop","open","flexShrink","whiteSpace","boxSizing","& .MuiDrawer-paper","ListItemLink","to","onclick","Selected","Disabled","renderLink","itemProps","ref","react_router_dom","undefined","ListItemButton","ListItemIcon","ListItemText","GetRouteElem","pathlocation","useLocation","find","pathname","RegistrationModel","activeStep","Header","logo","handleDrawerOpen","AppBar","MuiAppBar","zIndex","drawer","position","Toolbar","IconButton","aria-label","edge","Menu_default","alt","src","noWrap","Link_Link","underline","href","MiniDrawer","useTheme","setOpen","disabledIndex","setDisabledIndex","selectedIndex","setSelectedIndex","index","_useState","_useState2","CssBaseline","RegistrationScripts_Drawer","direction","ChevronRight_default","ChevronLeft_default","Divider","List","handleListItemClick","flexGrow","path","element","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","ReactDOM","render","StyledEngineProvider","injectFirst","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7ddb62ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/main_logo_left.dd08f33a.png\";","export const handleResponse = (response) => {\r\n  return response.text().then((text) => { \r\n    const data = text && JSON.parse(text);\r\n    if (!response.ok) {\r\n      const error = (data && data) || response.statusText;\r\n      return Promise.reject(error);\r\n    }\r\n    return data;\r\n  });\r\n};\r\n\r\nclass RequestBase{\r\n  SetBody(requestbody)\r\n  {\r\n    if (typeof window !== \"undefined\") {\r\n      return {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        headers: new Headers({\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          'ApiKey': 'hL4bA4nB4yI0vI0fC8fH7eT6'\r\n        },      \r\n        ),\r\n        body:JSON.stringify(requestbody)\r\n      };\r\n    } else\r\n      return {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          'ApiKey': 'hL4bA4nB4yI0vI0fC8fH7eT6'\r\n        },\r\n      };\r\n  }\r\n}\r\n\r\nconst instance = Object.freeze(new RequestBase());\r\nexport { instance as RequestBase }; \r\n\r\n\r\nexport const requestBase = (() => {\r\n  if (typeof window !== \"undefined\") {\r\n    return {\r\n      method: \"POST\",\r\n      mode: 'cors',\r\n      headers: new Headers({\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        'ApiKey': 'hL4bA4nB4yI0vI0fC8fH7eT6'\r\n      }),\r\n    };\r\n  } else\r\n    return {\r\n      method: \"POST\",\r\n      mode: 'cors',\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        'ApiKey': 'hL4bA4nB4yI0vI0fC8fH7eT6'\r\n      },\r\n    };\r\n})();","import { RequestBase } from \"../Helpers\";\r\nimport ApiSettings from \"../Settings/ApiSettings\"\r\n\r\nconst apiBase = ApiSettings.baseurl;\r\nconst apiVersion = ApiSettings.version;\r\n\r\nclass MsoRegistrationService \r\n{\r\n  async post(requestbody,apipath) \r\n  {\r\n    let requestbase = RequestBase.SetBody(requestbody);\r\n    let request = Object.assign({}, requestbase, { method: \"POST\" });\r\n    let url = apiBase+apiVersion+apipath;\r\n    console.log(url);\r\n    const response = await fetch(url, request);\r\n    return response; \r\n  }\r\n}\r\n\r\nconst instance = Object.freeze(new MsoRegistrationService());\r\nexport { instance as MsoRegistrationService };\r\n\r\nexport const getTitle = () => ([\r\n  { id: 'Miss', title: 'Miss' },\r\n  { id: 'Mr', title: 'Mr' },\r\n  { id: 'Mrs', title: 'Mrs' },\r\n  { id: 'Ms', title: 'Ms' },\r\n  { id: 'Dr', title: 'Dr' },\r\n  { id: 'Sir', title: 'Sir' },\r\n])\r\n\r\nexport const getRole = () => ([\r\n  { id: 'S', title: 'Intermediary' },\r\n  { id: 'A', title: 'Administrator' },\r\n  { id: 'SU', title: 'Supervisor' }, \r\n])\r\n\r\nexport const getBrands = () => ([\r\n  { id: 'NBS', title: 'Nationwide' },\r\n  { id: 'TMW', title: 'The Mortgage Works' },\r\n  { id: 'BOTH', title: 'BOTH' }, \r\n])\r\n\r\n","export default\r\n{\r\n  baseurl:\"https://msoregistration.herokuapp.com/api/\",\r\n  version:\"v1\",\r\n};","import React from 'react';\nimport { Grid,  Typography } from '@mui/material';\n\nexport default function PageHeader(props) {\n    const { title } = props;\n    return (       \n            <Grid columns={12} container>\n                <Typography sx={{ m: 1 }} variant=\"h5\">{title}</Typography>\n            </Grid>  \n    )\n}\n","import React from 'react'\nimport { Button as MuiButton, styled } from '@mui/material';\n\n\nconst useStyles = styled(theme => ({\n    root: {\n        margin: theme.spacing(0.5)\n    },\n    label: {\n        textTransform: 'none'\n    }\n}))\n\nexport default function Button(props) {\n\n    const { text, size, color, variant, onClick, ...other } = props\n    const classes = useStyles();\n\n    return (\n        <MuiButton\n            variant={variant || \"contained\"}\n            size={size || \"large\"}\n            color={color || \"primary\"}\n            onClick={onClick}\n            {...other}\n            classes={{ root: classes.root, label: classes.label }}>\n            {text}\n        </MuiButton>\n    )\n}\n","import React from 'react'\nimport { Button, styled } from '@mui/material';\n\n\nconst useStyles = styled(theme => ({\n    root: {\n        minWidth: 0,\n        margin: theme.spacing(0.5)\n    },\n    secondary: {\n        backgroundColor: theme.palette.secondary.light,\n        '& .MuiButton-label': {\n            color: theme.palette.secondary.main,\n        }\n    },\n    primary: {\n        backgroundColor: theme.palette.primary.light,\n        '& .MuiButton-label': {\n            color: theme.palette.primary.main,\n        }\n    },\n}))\n\nexport default function ActionButton(props) {\n\n    const { color, children, onClick } = props;\n    const classes = useStyles();\n\n    return (\n        <Button\n            className={`${classes.root} ${classes[color]}`}\n            onClick={onClick}>\n            {children}\n        </Button>\n    )\n}\n","import Input from \"./Input\";\nimport RadioGroup from \"./RadioGroup\";\nimport Select from \"./Select\";\nimport Checkbox from \"./Checkbox\";\nimport DatePickers from \"./DatePicker\";\nimport Button from \"./Button\";\nimport ActionButton from \"./ActionButton\";\n\nconst Controls = {\n    Input,\n    RadioGroup,\n    Select,\n    Checkbox,\n    DatePickers,\n    Button,\n    ActionButton\n}\n\nexport default Controls;","import React from 'react'\nimport { TextField,Grid } from '@mui/material';\n\nexport default function Input(props) {\n\n    const { name, label, value,error=null, onChange, ...other } = props;\n    return (\n        <Grid item xs={12} sm={12} md={6} lg={4}>\n        <TextField\n            size=\"small\"\n            label={label}\n            name={name}\n            value={value}\n            onChange={onChange}\n            {...other}\n            {...(error && {error:true,helperText:error})}\n        />\n        </Grid>\n    )\n}\n","import React from 'react'\nimport { FormControl, FormLabel, RadioGroup as MuiRadioGroup, FormControlLabel, Radio } from '@mui/material';\n\nexport default function RadioGroup(props) {\n\n    const { name, label, value, onChange, items } = props;\n\n    return (\n        <FormControl>\n            <FormLabel>{label}</FormLabel>\n            <MuiRadioGroup row\n                name={name}\n                value={value}\n                onChange={onChange}>\n                {\n                    items.map(\n                        item => (\n                            <FormControlLabel key={item.id} value={item.id} control={<Radio />} label={item.title} />\n                        )\n                    )\n                }\n            </MuiRadioGroup>\n        </FormControl>\n    )\n}\n","import React from 'react'\nimport { FormControl, InputLabel, Select as MuiSelect, MenuItem, FormHelperText,Grid } from '@mui/material';\nimport { useMediaQuery } from 'react-responsive';\nexport default function Select(props) {\n    const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\n    const { name, label, value, error = null, onChange, options, helperText } = props;\n\n    return (\n        <Grid item xs={12} sm={12} md={6} lg={4}>\n            <FormControl sx={{ m: 1, minWidth: isMobile ? '28ch' : '35ch' }}\n                {...(error && { error: true })}>\n                <InputLabel>{label}</InputLabel>\n                <MuiSelect\n                    label={label}\n                    name={name}\n                    value={value}\n                    size=\"small\"\n                    onChange={onChange}>\n                    <MenuItem value=\"\">Please Select</MenuItem>\n                    {\n                        options.map(\n                            item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                        )\n                    }\n                </MuiSelect>\n                {error && <FormHelperText>{helperText}</FormHelperText>}\n            </FormControl>\n        </Grid>\n    )\n}\n","import React from 'react'\nimport { FormControl, FormControlLabel, Checkbox as MuiCheckbox } from '@mui/material';\nexport default function Checkbox(props) {\n\n    const { name, label, value, onChange } = props;\n\n\n    const convertToDefEventPara = (name, value) => ({\n        target: {\n            name, value\n        }\n    })\n\n    return (\n        <FormControl>\n            <FormControlLabel\n                control={<MuiCheckbox\n                    name={name}\n                    color=\"primary\"\n                    checked={value}\n                    onChange={e => onChange(convertToDefEventPara(name, e.target.checked))}\n                />}\n                label={label}\n            />\n        </FormControl>\n    )\n}\n","import React from 'react'\nimport AdapterDateFns from '@mui/lab/AdapterDateFns'\nimport LocalizationProvider from '@mui/lab/LocalizationProvider'\nimport { DatePicker } from '@mui/lab'\nimport TextField from '@mui/material/TextField'; \nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormControl from '@mui/material/FormControl'; \nimport Grid from '@mui/material/Grid'; \n\nexport default function DatePickers(props) {\n\n    const { name, label, value, onChange,error=null,helperText } = props \n    return (\n        <Grid item xs={12} sm={12} md={6} lg={4}>\n        <FormControl  {...(error && {error:true})} >\n            <LocalizationProvider dateAdapter={AdapterDateFns} >\n                <DatePicker\n                    size=\"small\"\n                    label={label}\n                    value={value}\n                    onChange={onChange}\n                    name={name} \n                    inputFormat='dd/MM/yyyy'\n                    renderInput={(params) =>\n                        <TextField\n                            onChange={onChange}\n                            {...params} sx={{ mb: 4 }}\n                            size=\"small\"\n                            name={name} \n                        />}\n                />\n            </LocalizationProvider>\n            {error && <FormHelperText>{helperText}</FormHelperText>}\n        </FormControl>\n    </Grid>\n    )\n}\n","import React from 'react';\nimport { Grid,  Typography } from '@mui/material';\n\nexport default function BoxHeader(props) {\n    const { title } = props;\n    return (       \n        <Grid columns={12} container sx={{\n            mx: 'auto',\n            bgcolor: 'primary.light',\n            color: '#fff',  \n            borderTopLeftRadius:5,\n            borderTopRightRadius:5\n        }}>\n            <Typography sx={{ m: 1 }}>{title}</Typography>\n        </Grid>\n    )\n}\n","import Alert from '@mui/material/Alert';\r\nimport React from 'react'\r\nimport Typography from '@mui/material/Typography';\r\nimport { Grid } from '@mui/material';\r\nexport default function PopulateInfo(props) {\r\n    const { titles=[], outlined = true, severity=\"info\" } = props;\r\n    return (\r\n        <Grid columns={12} container>\r\n            <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                <Alert variant=\"outlined\" severity={severity} sx={{ m: 1, border: outlined ? 'auto' : 'none', padding: outlined ? 'auto' : 0 }}>\r\n                    {\r\n                        titles.map(\r\n                            item => (<Typography key={item.id} variant=\"body2\">{item.title}</Typography>)\r\n                        )\r\n                    }\r\n                </Alert>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport React from 'react'\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport Grid from '@mui/material/Grid';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { MsoRegistrationService, getTitle, getBrands, getRole } from '../Services/msoregistration-api';\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { CompanyNameRoute } from '../Scripts/RoutesData';\r\nimport PageHeader from \"../components/PageHeader\";\r\nimport Controls from '../components/controls/Controls';\r\nimport BoxHeader from '../components/BoxHeader';\r\nimport PopulateInfo from '../components/alerts/PopulateInfo';\r\nfunction RegistrationDetails({ NavigateToNext }) {\r\n\r\n    debugger;\r\n    const state = NavigateToNext.FormState;\r\n    const setState = NavigateToNext.setFormDataState;\r\n    const handleChange = (event) => {\r\n\r\n        setState(prev => ({\r\n            ...state,\r\n            ...prev,\r\n            [event.target.name]: event.target.value,\r\n            errorMessage: {\r\n                ...prev.errorMessage,\r\n                [event.target.name]: \"\"\r\n            }\r\n        }))\r\n\r\n    }\r\n    const handleme = () => {\r\n        NavigateToNext.NavigateToNext(CompanyNameRoute.RouteNumber)\r\n        navigate(CompanyNameRoute.RouteName);\r\n    }\r\n    const handleDateChange = (date) => {\r\n        setState({ ...state, date })\r\n    }\r\n    const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\r\n\r\n    const handleChangeEvent = (event) => {\r\n        Object.entries(state).map(([key, value]) => (\r\n            (((key === event.target.name &&\r\n                event.target.value !== null &&\r\n                event.target.value !== '') ? false : true\r\n            )\r\n                &&\r\n                (\r\n                    value === '' || value === null))\r\n                ? setState(prev => ({\r\n                    ...prev,\r\n                    error: true,\r\n                    errorMessage: {\r\n                        ...prev.errorMessage,\r\n                        [key]: \"enter correct \" + key + \"\"\r\n                    }\r\n                })) : setState(prev => ({\r\n                    ...prev,\r\n                    error: false,\r\n                    errorMessage: {\r\n                        ...prev.errorMessage,\r\n                        [key]: \"\"\r\n                    }\r\n                }))\r\n        ))\r\n    }\r\n\r\n    const [fcaStatus, setFcaStatus] = React.useState(true);\r\n    const [continuebuttondisabled, setContinueButtonStatus] = React.useState(true);\r\n    const [fcabuttonloading, setFcabuttonloading] = React.useState(false);\r\n    const [continuebuttonloading, Setcontinuebutton] = React.useState(false);\r\n\r\n\r\n    const findFCA = (event) => {\r\n\r\n        setFcabuttonloading(true);\r\n        console.log(state.CompanyFCAnumber);\r\n        MsoRegistrationService.post(state.CompanyFCAnumber, \"/validatefca\")\r\n            .then((response) => {\r\n                if (response.ok) {\r\n                    setFcaStatus(true);\r\n                    setContinueButtonStatus(false);\r\n                    console.log(\"Enable and redirect to, next menu\");\r\n                    setFcabuttonloading(false);\r\n                }\r\n                else {\r\n                    setFcaStatus(false);\r\n                    setContinueButtonStatus(true);\r\n                    setFcabuttonloading(false);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                setFcaStatus(false);\r\n                setFcabuttonloading(false);\r\n            });\r\n    }\r\n    const navigate = useNavigate();\r\n    const handleNext = (event) => {\r\n        handleChangeEvent(event);\r\n        if (!state.error) {\r\n            Setcontinuebutton(true);\r\n            MsoRegistrationService.post(\r\n                {\r\n                    \"title\": {\r\n                        \"value\": state.Title,\r\n                        \"caption\": state.TitleCaption\r\n                    },\r\n                    \"firstname\": state.firstName,\r\n                    \"surname\": state.Surname,\r\n                    \"dateOfBirth\": state.date,\r\n                    \"role\": {\r\n                        \"value\": state.Role,\r\n                        \"caption\": state.RoleCaption\r\n                    },\r\n                    \"brand\": {\r\n                        \"value\": state.Brand,\r\n                        \"caption\": state.BrandCaption\r\n                    },\r\n                    \"fcaNumber\": state.CompanyFCAnumber\r\n                }, \"/register\"\r\n            )\r\n                .then((response) => {\r\n                    if (response.ok) {\r\n                        console.log(\"Enable and redirect to, next menu\");\r\n                        NavigateToNext.NavigateToNext(CompanyNameRoute.RouteNumber)\r\n                        navigate(CompanyNameRoute.RouteName);\r\n                    }\r\n                    Setcontinuebutton(false);\r\n                })\r\n                .catch((err) => {\r\n                    console.error(err);\r\n                    Setcontinuebutton(false);\r\n                });\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, width: isMobile ? '28ch' : '35ch' },\r\n                    display: 'flex-box'\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <Grid container\r\n                    spacing={1}\r\n                    columns={12}>\r\n\r\n                    <PageHeader title=\"Registration Details\" />\r\n                    <Grid container columns={12} display={fcaStatus ? 'none' : 'block'}>\r\n                        <PopulateInfo severity=\"warning\" titles={[\r\n                            { id: 1, title: \"We have been unable to find a company on the FCA register matching the FCA number entered.\" },\r\n                            { id: 2, title: \"The information we hold is updated each Monday, with changes made with the FCA up to the previous Thursday.\" },\r\n                            { id: 3, title: \"If you believe the details you have entered are correct and you’re registering in line with the above timescales, please contact the FCA.\" }\r\n                        ]} />\r\n                    </Grid>\r\n                    <PopulateInfo titles={[\r\n                        { id: 1, title: \"If you’re registering with Nationwide, your details must match with your MTE registration. If these details are different, you will be unable to login to NFI Online.\" },\r\n                        { id: 2, title: \"Please check and confirm before proceeding.\" }\r\n                    ]} />\r\n\r\n                    <Grid columns={12} container>\r\n                    <Grid columns={12} container sx={{display:'block'}}>\r\n                        <Paper variant=\"elevation\" sx={{ m: 1 }}>\r\n                            <BoxHeader title=\"Personal Details\" />\r\n                            <Grid columns={12} container>\r\n                                <Controls.Select\r\n                                    value={state.Title}\r\n                                    label=\"Title\"\r\n                                    onChange={handleChange}\r\n                                    size=\"small\"\r\n                                    name=\"Title\"\r\n                                    options={getTitle()}\r\n                                    error={state.errorMessage.Title}\r\n                                    helperText={state.errorMessage.Title}\r\n                                />\r\n                                <Controls.Input\r\n                                    label=\"First Name\"\r\n                                    onChange={handleChange}\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    value={state.firstName}\r\n                                    error={state.errorMessage.firstName}\r\n                                    helperText={state.errorMessage.firstName}\r\n                                />\r\n                                <Controls.Input\r\n                                    label=\"Surname\"\r\n                                    onChange={handleChange}\r\n                                    type=\"text\"\r\n                                    name=\"Surname\"\r\n                                    value={state.Surname}\r\n                                    error={state.errorMessage.Surname}\r\n                                    helperText={state.errorMessage.Surname}\r\n                                    size=\"small\"\r\n                                />\r\n                                <Controls.DatePickers\r\n                                    label=\"Date of birth\"\r\n                                    value={state.date}\r\n                                    onChange={handleDateChange}\r\n                                    name=\"date\"\r\n                                    error={state.errorMessage.date}\r\n                                    helperText={state.errorMessage.date}\r\n                                />\r\n                                <Controls.Select\r\n                                    value={state.Role}\r\n                                    label=\"Role\"\r\n                                    onChange={handleChange}\r\n                                    size=\"small\"\r\n                                    name=\"Role\"\r\n                                    options={getRole()}\r\n                                    error={state.errorMessage.Role}\r\n                                    helperText={state.errorMessage.Role}\r\n                                />\r\n                                <Controls.Select\r\n                                    value={state.Brand}\r\n                                    label=\"Which brand(s) are you registering for?\"\r\n                                    onChange={handleChange}\r\n                                    size=\"small\"\r\n                                    name=\"Brand\"\r\n                                    options={getBrands()}\r\n                                    error={state.errorMessage.Brand}\r\n                                    helperText={state.errorMessage.Brand}\r\n                                />\r\n                            </Grid>\r\n                            <PopulateInfo outlined={false} titles={[\r\n                                { id: 1, title: \"If you’re already registered with Nationwide or The Mortgage Works and would like to register for a second brand, select ‘Both’.\" }\r\n                            ]} />\r\n                        </Paper>\r\n                        </Grid>\r\n                        <Grid columns={12} container sx={{display:'block'}}>\r\n                        <Paper variant=\"elevation\" sx={{ m: 1}}>                             \r\n                                <BoxHeader title=\"Company Details\" />\r\n                                <PopulateInfo outlined={false} titles={[\r\n                                    { id: 1, title: \"Please enter your company FCA number and select ‘Search’ to retrieve details from the FCA register.\" }\r\n                                ]} />\r\n\r\n                                <Grid columns={12} container>\r\n                                    <Controls.Input\r\n                                        label=\"Company FCA number\"\r\n                                        onChange={e => { handleChange(e); setContinueButtonStatus(true) }}\r\n                                        type=\"text\"\r\n                                        name=\"CompanyFCAnumber\"\r\n                                        value={state.CompanyFCAnumber}\r\n                                        error={state.errorMessage.CompanyFCAnumber !== ''}\r\n                                        helperText={state.errorMessage.CompanyFCAnumber}\r\n                                        size=\"small\"\r\n                                    />\r\n                                    <Grid item xs={12} sm={12} md={6} lg={8}>\r\n                                        <LoadingButton startIcon={<SearchIcon />} sx={{ m: 1 }} variant=\"contained\"\r\n                                            loading={fcabuttonloading}\r\n                                            loadingPosition=\"start\"\r\n                                            disabled={state.CompanyFCAnumber === ''}\r\n                                            color=\"success\" size=\"medium\" onClick={findFCA}>Search</LoadingButton>\r\n                                    \r\n                                </Grid>                         \r\n                               \r\n                            </Grid>\r\n                        </Paper>\r\n                        </Grid>\r\n                        <Grid columns={12} container sx={{display:'block'}}>\r\n                        <Paper variant=\"elevation\" sx={{ m: 1 }}>                           \r\n                                <BoxHeader title=\"Declaration\" />\r\n                                <PopulateInfo outlined={false} titles={[\r\n                                    { id: 1, title: \"By clicking ‘Agree & Continue’, you confirm you have read and agree to the registration declaration.\" }\r\n                                ]} />\r\n                        </Paper>\r\n                        </Grid>\r\n                        <Grid columns={12} container>\r\n                            <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                                <LoadingButton startIcon={<SendIcon />} sx={{ m: 1 }} variant=\"contained\"\r\n                                    disabled={continuebuttondisabled}\r\n                                    loading={continuebuttonloading}\r\n                                    loadingPosition=\"start\"\r\n                                    color=\"success\" onClick={handleNext}>Agree & Continue</LoadingButton>\r\n                                <LoadingButton onClick={handleme}>Test Next Button</LoadingButton>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default RegistrationDetails\r\n","import {Box,Paper} from '@mui/material';\r\nimport React from 'react'\r\nimport Typography from '@mui/material/Typography';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport Grid from '@mui/material/Grid';   \r\nimport { useNavigate  } from 'react-router-dom';\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport {AddressRoute} from '../Scripts/RoutesData';\r\nimport Controls from '../components/controls/Controls';\r\nimport BoxHeader from '../components/BoxHeader';\r\nconst companyDetails =  ({NavigateToNext}) => { \r\n    const navigate = useNavigate();\r\n   \r\n    const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\r\n    const handleme= () =>{\r\n        NavigateToNext.NavigateToNext(AddressRoute.RouteNumber)\r\n        navigate(AddressRoute.RouteName); \r\n    }\r\n    return (\r\n\r\n        <div>\r\n\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, width: isMobile ? '28ch' : '35ch' },\r\n                    display: 'flex-box'\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            > \r\n                <Grid container\r\n                    spacing={1}\r\n                    columns={12}>\r\n                    <Grid columns={12} container>\r\n                        <Typography sx={{ m: 1 }} variant=\"h5\">Company Details </Typography>\r\n                    </Grid> \r\n                </Grid>\r\n                <LoadingButton onClick={handleme}>Test Next Button</LoadingButton>   \r\n            </Box>\r\n            <Paper variant=\"outlined\">\r\n           \r\n                <BoxHeader title=\"Personal Details\" />\r\n                <Grid container\r\n                   sx={{m:1}}\r\n                    columns={12}>\r\n            <Controls.Input\r\n                                label=\"First Name\" \r\n                                type=\"text\"\r\n                                name=\"firstName\"\r\n                                \r\n                            />\r\n                                <Controls.Input\r\n                                label=\"First Name\" \r\n                                type=\"text\"\r\n                                name=\"firstName\" \r\n                            />\r\n                                <Controls.Input\r\n                                label=\"First Name\" \r\n                                type=\"text\"\r\n                                name=\"firstName\" \r\n                            />\r\n                            </Grid>\r\n                </Paper>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default companyDetails\r\n","import Box from '@mui/material/Box';\r\nimport React from 'react' \r\nimport { useMediaQuery } from 'react-responsive';    \r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport { useNavigate  } from 'react-router-dom';\r\nimport {ContactRoute} from '../Scripts/RoutesData';\r\nimport PageHeader from \"../components/PageHeader\"; \r\nconst addressDetails = ({NavigateToNext}) => { \r\n    const navigate = useNavigate();\r\n\r\n    const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\r\n    const handleme= () =>{\r\n        NavigateToNext.NavigateToNext(ContactRoute.RouteNumber)\r\n        navigate(ContactRoute.RouteName); \r\n    }\r\n    return (\r\n\r\n        <div>\r\n\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, width: isMobile ? '28ch' : '35ch' },\r\n                    display: 'flex-box'\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >   <PageHeader  title=\"Address Details\" />\r\n                <LoadingButton onClick={handleme}>Test Next Button</LoadingButton>     \r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\nexport default addressDetails\r\n","import Box from '@mui/material/Box';\r\nimport React from 'react'\r\nimport Typography from '@mui/material/Typography';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport Grid from '@mui/material/Grid';   \r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport { useNavigate  } from 'react-router-dom';\r\nimport {ConfirmationRoute} from '../Scripts/RoutesData';\r\nconst submissionRoute = ({NavigateToNext}) => { \r\n    const navigate = useNavigate();\r\n\r\n    const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\r\n    const handleme= () =>{\r\n        NavigateToNext.NavigateToNext(ConfirmationRoute.RouteNumber)\r\n        navigate(ConfirmationRoute.RouteName); \r\n    }\r\n    return (\r\n\r\n        <div>\r\n\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, width: isMobile ? '28ch' : '35ch' },\r\n                    display: 'flex-box'\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            > \r\n                <Grid container\r\n                    spacing={1}\r\n                    columns={12}>\r\n                    <Grid columns={12} container>\r\n                        <Typography sx={{ m: 1 }} variant=\"h5\">Submission Route(s) </Typography>\r\n                    </Grid> \r\n                </Grid>\r\n                <LoadingButton onClick={handleme}>Test Next Button</LoadingButton> \r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\nexport default submissionRoute\r\n","import Box from '@mui/material/Box';\r\nimport React from 'react'\r\nimport Typography from '@mui/material/Typography';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport Grid from '@mui/material/Grid';   \r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport { useNavigate  } from 'react-router-dom';\r\nimport {SubmissionPageRoute} from '../Scripts/RoutesData';\r\nconst contactDetails = ({NavigateToNext}) => { \r\n    const navigate = useNavigate();\r\n\r\n    const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\r\n    const handleme= () =>{\r\n        NavigateToNext.NavigateToNext(SubmissionPageRoute.RouteNumber)\r\n        navigate(SubmissionPageRoute.RouteName); \r\n    }\r\n    return (\r\n\r\n        <div>\r\n\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, width: isMobile ? '28ch' : '35ch' },\r\n                    display: 'flex-box'\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            > \r\n                <Grid container\r\n                    spacing={1}\r\n                    columns={12}>\r\n                    <Grid columns={12} container>\r\n                        <Typography sx={{ m: 1 }} variant=\"h5\">Contact Details </Typography>\r\n                    </Grid> \r\n                </Grid>\r\n                <LoadingButton onClick={handleme}>Test Next Button</LoadingButton>  \r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\nexport default contactDetails\r\n","import Box from '@mui/material/Box';\r\nimport React from 'react'\r\nimport Typography from '@mui/material/Typography';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport Grid from '@mui/material/Grid';    \r\n\r\nconst confirmationtDetails = () => {  \r\n    const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\r\n \r\n    return (\r\n\r\n        <div>\r\n\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, width: isMobile ? '28ch' : '35ch' },\r\n                    display: 'flex-box'\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            > \r\n                <Grid container\r\n                    spacing={1}\r\n                    columns={12}>\r\n                    <Grid columns={12} container>\r\n                        <Typography sx={{ m: 1 }} variant=\"h5\">Confirmation</Typography>\r\n                    </Grid> \r\n                </Grid> \r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\nexport default confirmationtDetails\r\n","\r\nimport * as React from 'react';\r\nimport AppRegistrationIcon from '@mui/icons-material/AppRegistration';\r\nimport ConfirmationNumberIcon from '@mui/icons-material/ConfirmationNumber';\r\nimport BusinessIcon from '@mui/icons-material/Business';\r\nimport ImportContactsIcon from '@mui/icons-material/ImportContacts';\r\nimport ContactsIcon from '@mui/icons-material/Contacts';\r\nimport DirectionsIcon from '@mui/icons-material/Directions';\r\nimport RegistrationDetails from '../pages/RegistrationDetails';\r\nimport CompanyDetails from '../pages/CompanyDetails';\r\nimport AddressDetails from '../pages/AddressDetails';\r\nimport SubmissionRoute from '../pages/SubmissionRoute';\r\nimport ContactDetails from '../pages/ContactDetails';\r\nimport ConfirmationDetails from '../pages/ConfirmationDetails';\r\n\r\nfunction RoutesData(NavigateToNext)\r\n{\r\n  return (\r\n    {\r\n  menuitem:\r\n  [\r\n   {menucaption : \"Registration Details\",menupath : \"/registrationdetails\",icon:<AppRegistrationIcon  color=\"primary\" />,routedata:<RegistrationDetails NavigateToNext = {NavigateToNext}/>,disabled:false,selected:true},\r\n   {menucaption : \"Company Name\", menupath : \"/companyname\",icon:<BusinessIcon  color=\"primary\"  />,routedata: <CompanyDetails  NavigateToNext = {NavigateToNext}/>,disabled:true,selected:false},\r\n   {menucaption : \"Address Details\", menupath : '/addressdetails',icon:<ImportContactsIcon  color=\"primary\"  />,routedata:<AddressDetails NavigateToNext = {NavigateToNext}/>,disabled:true,selected:false},\r\n   {menucaption : \"Contact Details\",menupath : '/contactdetails',icon:<ContactsIcon  color=\"primary\"  />,routedata:<ContactDetails NavigateToNext = {NavigateToNext}/>,disabled:true,selected:false},\r\n   {menucaption : \"Submission Route(s)\",menupath : '/submissionroute',icon:<DirectionsIcon  color=\"primary\"  />,routedata:<SubmissionRoute NavigateToNext = {NavigateToNext}/>,disabled:true,selected:false},\r\n   {menucaption : \"Confirmation\",menupath : '/confirmation',icon:<ConfirmationNumberIcon  color=\"primary\"  />,routedata:<ConfirmationDetails NavigateToNext = {NavigateToNext}/>,disabled:true,selected:false}\r\n  ]})\r\n}\r\n\r\nexport default RoutesData;\r\n\r\nexport const RegistrationRoute = {RouteName:  \"/registrationdetails\",RouteNumber:0};\r\nexport const CompanyNameRoute =  {RouteName:  \"/companyname\",RouteNumber:1};\r\nexport const AddressRoute =  {RouteName:  \"/addressdetails\",RouteNumber:2};\r\nexport const ContactRoute =  {RouteName:  \"/contactdetails\",RouteNumber:3};\r\nexport const SubmissionPageRoute =  {RouteName:  \"/submissionroute\",RouteNumber:4};\r\nexport const ConfirmationRoute =  {RouteName:  \"/confirmation\",RouteNumber:5};","\r\n\r\nimport  * as React  from 'react';\r\nimport RoutesData from './RoutesData'\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport { StaticRouter } from 'react-router-dom/server.mjs'; \r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText'; \r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport { \r\n    Link as RouterLink,\r\n    MemoryRouter,\r\n    useLocation\r\n  } from 'react-router-dom';\r\n  import PropTypes from 'prop-types'; \r\n\r\nexport function Router(props) {\r\n    const { children } = props;\r\n    if (typeof window === 'undefined') {\r\n      return <StaticRouter location=\"/registrationdetails\">{children}</StaticRouter>;\r\n    }\r\n    \r\n    return (\r\n      <MemoryRouter initialEntries={['/registrationdetails']} initialIndex={0}>\r\n        {children}\r\n      </MemoryRouter>\r\n    );\r\n  }\r\n  \r\n  Router.propTypes = {\r\n    children: PropTypes.node,\r\n  };\r\n  const drawerWidth = 240;\r\n  \r\n  const openedMixin = (theme) => ({\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n  });\r\n  \r\n  const closedMixin = (theme) => ({\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: `calc(${theme.spacing(7)} + 1px)`,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(${theme.spacing(9)} + 1px)`,\r\n    },\r\n  });\r\n  \r\n  export const DrawerHeader = styled('div')(({ theme }) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  }));\r\n  \r\n  export const Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\r\n    ({ theme, open }) => ({\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n      boxSizing: 'border-box',\r\n      ...(open && {\r\n        ...openedMixin(theme),\r\n        '& .MuiDrawer-paper': openedMixin(theme),\r\n      }),\r\n      ...(!open && {\r\n        ...closedMixin(theme),\r\n        '& .MuiDrawer-paper': closedMixin(theme),\r\n      }),\r\n    }),\r\n  );\r\n  \r\n  export function ListItemLink(props) {\r\n    const { icon, primary, to ,onclick,Selected,Disabled} = props;\r\n  \r\n    const renderLink = React.useMemo(\r\n      () =>\r\n        React.forwardRef(function Link(itemProps, ref) {\r\n          return <RouterLink to={to} ref={ref} {...itemProps} role={undefined} onClick ={onclick} selected = {Selected} disabled = {Disabled}/>;\r\n        }),\r\n      [to],\r\n    );\r\n  \r\n    return (\r\n      <li>\r\n        <ListItemButton component={renderLink} onClick={onclick} selected={Selected} disabled = {Disabled}>\r\n          {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\r\n          <ListItemText primary={primary} />\r\n        </ListItemButton>\r\n      </li>\r\n    );\r\n  }\r\n  \r\n  ListItemLink.propTypes = {\r\n    icon: PropTypes.element,\r\n    primary: PropTypes.string.isRequired,\r\n    to: PropTypes.string.isRequired,\r\n  };\r\n  \r\n export function GetRouteElem(NavigateToNext)\r\n  { \r\n   const pathlocation = useLocation();\r\n   var data = RoutesData(NavigateToNext).menuitem.find((e) => e.menupath === pathlocation.pathname)\r\n   return (data.routedata);\r\n  } \r\n \r\n  ","const  RegistrationModel =\r\n{\r\n    errorMessage: {\r\n        firstName: '',\r\n        Surname: '',\r\n        date: '',\r\n        Title: '',\r\n        Role: '',\r\n        Brand: '',\r\n        CompanyFCAnumber: ''\r\n    },\r\n    error: true,\r\n    activeStep: 0,\r\n    firstName: '',\r\n    Surname: '',\r\n    date: null,\r\n    Title: '',\r\n    Role: '',\r\n    Brand: '',\r\n    CompanyFCAnumber: ''\r\n}\r\n\r\nexport default RegistrationModel","import React from 'react';\nimport {Toolbar, IconButton,Link,Typography,styled } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport MuiAppBar from '@mui/material/AppBar';\nexport default function Header(props) { \n    const { open,logo,handleDrawerOpen } = props;\n    const AppBar = styled(MuiAppBar, {\n        shouldForwardProp: (prop) => prop !== 'open',\n      })(({ theme, open }) => ({\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        })\n      }));\n    return (\n        <AppBar position=\"fixed\" open={open}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"             \n          >\n            <MenuIcon />\n          </IconButton>\n          <img alt=\"Nationwide Logo\" src={logo} className=\"App-logo\" />\n          <Typography variant=\"h6\" noWrap component=\"div\">\n           <Link underline=\"none\" color=\"inherit\" className=\"App-name\" href=\"#\"> MSO Registration</Link>\n          </Typography>\n        </Toolbar>\n      </AppBar>    \n    )\n}\n","\nimport logo from \"../main_logo_left.png\";\nimport '../App.css'; \nimport React, { useState } from 'react'\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'; \nimport RoutesData from '../Scripts/RoutesData'\nimport { useMediaQuery } from 'react-responsive'; \nimport { \n  Route,\n  Routes\n} from 'react-router-dom';\nimport {Router,DrawerHeader,Drawer,ListItemLink,GetRouteElem} from \"../Scripts/RegistrationScripts\";\nimport RegistrationModel from \"../Models/RegistrationModel\"\nimport Header from \"./Header\";\n\nexport default function MiniDrawer() {  \n  const theme = useTheme();\n  const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\n  const [open, setOpen] = React.useState(!isMobile); \n  const handleDrawerOpen = () => {\n    setOpen(!open);\n  }; \n  const handleDrawerClose = () => {\n    setOpen(!open);\n  }; \n  const [disabledIndex, setDisabledIndex] = React.useState(0);\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  const handleListItemClick = (index) => {     \n    setSelectedIndex(index);    \n  }; \n\n  function NavigateToNext(index)\n  {\n    setSelectedIndex(index); \n    setDisabledIndex(disabledIndex>= index ? disabledIndex:index);\n  }\n  const [state, setState] = useState(RegistrationModel)\n   \n  return (\n    <Box sx={{ display: 'flex' }}>\n       <Router>\n      <CssBaseline />  \n      <Header open = {open} logo = {logo} handleDrawerOpen = {handleDrawerOpen}/>\n      <Drawer variant=\"permanent\" open={open}>\n        <DrawerHeader>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </DrawerHeader>\n        <Divider /> \n        <List>\n          {RoutesData(NavigateToNext).menuitem.map((menuitem, index) => (\n           <ListItemLink to={menuitem.menupath} primary={menuitem.menucaption} icon={menuitem.icon}\n             key={menuitem.menucaption} \n             onclick={(event) => handleListItemClick(index)}\n             Selected = {selectedIndex === index}\n             Disabled = {!(index === disabledIndex || index < disabledIndex)} />\n          ))}\n        </List>  \n      </Drawer>\n      <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n        <DrawerHeader /> \n        <Routes >\n          <Route path=\"*\" element={<GetRouteElem NavigateToNext = {NavigateToNext} FormState = {state} setFormDataState = {setState}/>} />\n        </Routes> \n      </Box> \n      </Router>\n    </Box>\n  );\n}\n\n        ","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { StyledEngineProvider } from '@mui/material/styles'; \r\nimport SideNav from './components/SideNav'; \r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as serviceWorker from './serviceWorker';\r\nReactDOM.render(\r\n  <StyledEngineProvider injectFirst>\r\n    <SideNav />\r\n  </StyledEngineProvider>,\r\n  document.getElementById('root')\r\n);\r\n \r\nserviceWorker.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}