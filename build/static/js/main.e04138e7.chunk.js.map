{"version":3,"sources":["main_logo_left.png","pages/alerts/nofcafound.js","pages/alerts/MteInfo.js","_helpers/fetch-helpers.js","_services/msoregistration-api.js","Settings/ApiSettings.js","pages/SimpleForm.jsx","pages/CompanyDetails.jsx","pages/AddressDetails.jsx","pages/SubmissionRoute.jsx","pages/ContactDetails.jsx","pages/ConfirmationDetails.jsx","pages/menudata.js","SideNav.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NoFcaFound","react_default","a","createElement","Alert","variant","severity","sx","m","Typography","MteInfo","RequestBase","requestbody","window","method","credentials","mode","headers","Headers","Accept","Content-Type","body","JSON","stringify","instance","Object","freeze","apiBase","apiVersion","MsoRegistrationService","apipath","requestbase","SetBody","request","assign","url","console","log","fetch","response","simpleform","_ref","NavigateToNext","_useState","useState","errorMessage","firstName","Surname","date","Title","Role","Brand","Company_FCA_number","error","activeStep","_useState2","slicedToArray","state","setState","handleChange","event","prev","objectSpread","defineProperty","target","name","value","handleChangeEvent","isMobile","useMediaQuery","query","entries","map","_ref2","_ref3","key","_React$useState","React","_React$useState2","fcaStatus","setFcaStatus","_React$useState3","_React$useState4","continuebuttondisabled","setContinueButtonStatus","_React$useState5","_React$useState6","fcabuttonloading","setFcabuttonloading","_React$useState7","_React$useState8","continuebuttonloading","Setcontinuebutton","navigate","useNavigate","Box","component","& .MuiTextField-root","width","display","noValidate","autoComplete","Grid","container","spacing","columns","mx","bgcolor","color","borderRadius","item","xs","sm","md","lg","FormControl","minWidth","InputLabel","id","Select","labelId","label","onChange","size","MenuItem","FormHelperText","TextField","type","helperText","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","renderInput","params","mb","border","padding","margin","LoadingButton","startIcon","Search_default","loading","loadingPosition","disabled","onClick","post","then","ok","catch","err","Send_default","title","caption","TitleCaption","firstname","surname","dateOfBirth","role","RoleCaption","brand","BrandCaption","fcaNumber","companyDetails","addressDetails","submissionRoute","contactDetails","confirmationtDetails","RoutesData","menuitem","menucaption","menupath","icon","react","AppRegistration_default","routedata","SimpleForm","selected","Business_default","CompanyDetails","ImportContacts_default","AddressDetails","Contacts_default","ContactDetails","Directions_default","SubmissionRoute","ConfirmationNumber_default","ConfirmationDetails","Router","props","children","server","location","react_router","initialEntries","initialIndex","openedMixin","theme","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","concat","breakpoints","up","DrawerHeader","styled","alignItems","justifyContent","mixins","toolbar","AppBar","MuiAppBar","shouldForwardProp","prop","open","zIndex","drawer","Drawer","MuiDrawer","_ref4","flexShrink","whiteSpace","boxSizing","& .MuiDrawer-paper","ListItemLink","primary","to","onclick","Selected","Disabled","renderLink","useMemo","forwardRef","itemProps","ref","react_router_dom","undefined","ListItemButton","ListItemIcon","ListItemText","GetRouteElem","pathlocation","useLocation","find","e","pathname","MiniDrawer","useTheme","setOpen","disabledIndex","setDisabledIndex","selectedIndex","setSelectedIndex","index","CssBaseline","SideNav_AppBar","position","Toolbar","IconButton","aria-label","edge","Menu_default","alt","src","logo","className","noWrap","Link_Link","underline","href","SideNav_Drawer","direction","ChevronRight_default","ChevronLeft_default","Divider","List","handleListItemClick","flexGrow","path","element","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","ReactDOM","render","StyledEngineProvider","injectFirst","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e04138e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/main_logo_left.dd08f33a.png\";","import Alert from '@mui/material/Alert';\r\nimport React from 'react'\r\nimport Typography from '@mui/material/Typography';\r\nexport default function NoFcaFound() {\r\n    return (\r\n        <Alert variant=\"outlined\" severity=\"warning\"   sx={{ m: 1 }}>\r\n            <Typography  variant=\"body2\">We have been unable to find a company on the FCA register matching the FCA number entered.</Typography>\r\n            <Typography  variant=\"body2\">The information we hold is updated each Monday, with changes made with the FCA up to the previous Thursday.</Typography>\r\n            <Typography variant=\"body2\">If you believe the details you have entered are correct and you’re registering in line with the above timescales, please contact the FCA.</Typography>\r\n        </Alert>\r\n    )\r\n}","import Alert from '@mui/material/Alert';\r\nimport React from 'react'\r\nimport Typography from '@mui/material/Typography';\r\nexport default function MteInfo() {\r\n    return (\r\n        <Alert variant=\"outlined\" severity=\"info\" sx={{ m: 1 }}>\r\n        <Typography variant=\"body2\">If you’re registering with Nationwide, your details must match with your MTE registration. If these details are different, you will be unable to login to NFI Online.</Typography>\r\n        <Typography variant=\"body2\">Please check and confirm before proceeding.</Typography>\r\n    </Alert>\r\n    )\r\n}","export const handleResponse = (response) => {\r\n  return response.text().then((text) => { \r\n    const data = text && JSON.parse(text);\r\n    if (!response.ok) {\r\n      const error = (data && data) || response.statusText;\r\n      return Promise.reject(error);\r\n    }\r\n    return data;\r\n  });\r\n};\r\n\r\nclass RequestBase{\r\n  SetBody(requestbody)\r\n  {\r\n    if (typeof window !== \"undefined\") {\r\n      return {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        mode: 'cors',\r\n        headers: new Headers({\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        }),\r\n        body:JSON.stringify(requestbody)\r\n      };\r\n    } else\r\n      return {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        // mode: 'cors',\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n  }\r\n}\r\n\r\nconst instance = Object.freeze(new RequestBase());\r\nexport { instance as RequestBase }; \r\n\r\n\r\nexport const requestBase = (() => {\r\n  if (typeof window !== \"undefined\") {\r\n    return {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      mode: 'cors',\r\n      headers: new Headers({\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n    };\r\n  } else\r\n    return {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      // mode: 'cors',\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n})();","import { RequestBase } from \"../_helpers\";\r\nimport ApiSettings from \"../Settings/ApiSettings\"\r\n\r\nconst apiBase = ApiSettings.baseurl;\r\nconst apiVersion = ApiSettings.version;\r\n\r\nclass MsoRegistrationService {\r\n  async post(requestbody,apipath) {\r\n    let requestbase = RequestBase.SetBody(requestbody);\r\n    let request = Object.assign({}, requestbase, { method: \"POST\" });\r\n    let url = apiBase+apiVersion+apipath;\r\n    console.log(url);\r\n    const response = await fetch(url, request);\r\n    return response; \r\n  }\r\n\r\n}\r\n\r\nconst instance = Object.freeze(new MsoRegistrationService());\r\nexport { instance as MsoRegistrationService };\r\n","export default\r\n{\r\n  baseurl:\"https://localhost:5001/api/\",\r\n  version:\"v1\",\r\n};","import Box from '@mui/material/Box';\r\nimport React, { useState } from 'react'\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns'\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider'\r\nimport { DatePicker } from '@mui/lab'\r\nimport TextField from '@mui/material/TextField';\r\nimport Alert from '@mui/material/Alert';\r\nimport Typography from '@mui/material/Typography';\r\nimport Select from '@mui/material/Select';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport Grid from '@mui/material/Grid';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport SendIcon from '@mui/icons-material/Send';  \r\nimport NoFcaFound from './alerts/nofcafound'\r\nimport MteInfo from './alerts/MteInfo';\r\nimport { MsoRegistrationService } from '../_services/msoregistration-api'; \r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport { useNavigate  } from 'react-router-dom';\r\n\r\nfunction  simpleform({NavigateToNext}) {\r\n\r\n    const [state, setState] = useState({\r\n        errorMessage: {\r\n\r\n            firstName: '',\r\n            Surname: '',\r\n            date: '',\r\n            Title: '',\r\n            Role: '',\r\n            Brand: '',\r\n            Company_FCA_number: ''\r\n        },\r\n        error: true,\r\n        activeStep: 0,\r\n        firstName: '',\r\n        Surname: '',\r\n        date: null,\r\n        Title: '',\r\n        Role: '',\r\n        Brand: '',\r\n        Company_FCA_number: ''\r\n    })\r\n    const handleChange = (event) => {\r\n\r\n        setState(prev => ({\r\n            ...state,\r\n            ...prev,\r\n            [event.target.name]: event.target.value,\r\n        }))\r\n        handleChangeEvent(event);\r\n    }\r\nconst handleme= () =>{\r\n    NavigateToNext.NavigateToNext(1)\r\n    navigate(\"/companyname\"); \r\n}\r\n\r\n    const handleDateChange = (date) => {\r\n        setState({ ...state, date })\r\n    }\r\n    const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\r\n\r\n    const handleChangeEvent= (event)=>{\r\n        Object.entries(state).map(([key, value]) => (\r\n            (((key === event.target.name &&\r\n                event.target.value !== null &&\r\n                event.target.value !== '') ? false : true\r\n            )\r\n                &&\r\n                (\r\n                    value === '' || value === null))\r\n                ? setState(prev => ({\r\n                    ...prev,\r\n                    error: true,\r\n                    errorMessage: {\r\n                        ...prev.errorMessage,\r\n                        [key]: \"enter correct \" + key + \"\"\r\n                    }\r\n                })) : setState(prev => ({\r\n                    ...prev,\r\n                    error: false,\r\n                    errorMessage: {\r\n                        ...prev.errorMessage,\r\n                        [key]: \"\"\r\n                    }\r\n                }))\r\n        ))\r\n    }\r\n\r\n    const [fcaStatus, setFcaStatus] = React.useState(true);\r\n    const [continuebuttondisabled, setContinueButtonStatus] = React.useState(true);\r\n    const [fcabuttonloading, setFcabuttonloading] = React.useState(false);\r\n    const [continuebuttonloading, Setcontinuebutton] = React.useState(false);\r\n    \r\n \r\n    const findFCA = (event) =>\r\n    {\r\n       \r\n        setFcabuttonloading(true);\r\n        console.log(state.Company_FCA_number);\r\n        MsoRegistrationService.post(state.Company_FCA_number,\"/validatefca\")\r\n        .then((response) => {\r\n            if(response.ok)\r\n            {\r\n            setFcaStatus(true);\r\n            setContinueButtonStatus(false);\r\n            console.log(\"Enable and redirect to, next menu\");\r\n            setFcabuttonloading(false);\r\n            }\r\n            else{\r\n                setFcaStatus(false);\r\n                setContinueButtonStatus(true);\r\n                setFcabuttonloading(false);\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.error(err);\r\n            setFcaStatus(false);\r\n            setFcabuttonloading(false);\r\n        });\r\n    }\r\n    const navigate = useNavigate();\r\n    const handleNext = (event) => {         \r\n        handleChangeEvent(event);        \r\n        if(!state.error)\r\n        {\r\n            Setcontinuebutton(true);\r\n            MsoRegistrationService.post(\r\n                 {\r\n                    \"title\": {\r\n                      \"value\": state.Title,\r\n                      \"caption\": state.TitleCaption\r\n                    },\r\n                    \"firstname\": state.firstName,\r\n                    \"surname\": state.Surname,\r\n                    \"dateOfBirth\": state.date,\r\n                    \"role\": {\r\n                      \"value\": state.Role,\r\n                      \"caption\": state.RoleCaption\r\n                    },\r\n                    \"brand\": {\r\n                      \"value\": state.Brand,\r\n                      \"caption\": state.BrandCaption\r\n                    },\r\n                    \"fcaNumber\": state.Company_FCA_number\r\n                },\"/register\"\r\n            )\r\n            .then((response) => {\r\n                if(response.ok)\r\n                {\r\n                    console.log(\"Enable and redirect to, next menu\");\r\n                    NavigateToNext.NavigateToNext(1);\r\n                    navigate(\"/companyname\"); \r\n                }\r\n                Setcontinuebutton(false);\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                Setcontinuebutton(false);\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, width: isMobile ? '28ch' : '35ch' },\r\n                    display: 'flex-box'\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            > \r\n                <Grid container\r\n                    spacing={1}\r\n                    columns={12}>\r\n                    <Grid columns={12} container>\r\n                        <Typography sx={{ m: 1 }} variant=\"h5\">Registration Details </Typography>\r\n                    </Grid>\r\n                    <Grid container columns={12} display={fcaStatus?'none':'block'}>\r\n                        <NoFcaFound/>\r\n                    </Grid>\r\n                    <Grid container columns={12} display={'block'}> \r\n                      <MteInfo/>\r\n                    </Grid>\r\n                    <Grid columns={12} container>\r\n\r\n                        <Grid columns={12} container sx={{\r\n                            mx: 'auto',\r\n                            bgcolor: 'primary.light',\r\n                            color: '#fff',\r\n                            m: 1,\r\n                            borderRadius: 1,\r\n                        }}>\r\n                            <Typography sx={{ m: 1 }}>Personal Details</Typography>\r\n                        </Grid>\r\n                        <Grid columns={12} container>\r\n                            <Grid item xs={12} sm={12} md={6} lg={4}>\r\n                                <FormControl sx={{ m: 1, minWidth: isMobile ? '28ch' : '35ch' }} error={state.errorMessage.Title !== ''}>\r\n                                    <InputLabel id=\"demo-simple-select-helper-label\">Title</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-helper-label\"\r\n                                        id=\"demo-simple-select-helper\"\r\n                                        value={state.Title}\r\n                                        label=\"Title\"\r\n                                        onChange={handleChange}\r\n                                        size=\"small\"\r\n                                        name=\"Title\">\r\n                                         <MenuItem value=\"\">\r\n                                            <em>Select...</em>\r\n                                        </MenuItem>\r\n                                        <MenuItem value=\"Miss\">Miss</MenuItem>\r\n                                        <MenuItem value=\"Mr\">Mr</MenuItem>\r\n                                        <MenuItem value=\"Mrs\">Mrs</MenuItem>\r\n                                        <MenuItem value=\"Ms\">Ms</MenuItem>\r\n                                        <MenuItem value=\"Dr\">Dr</MenuItem>\r\n                                        <MenuItem value=\"Sir\">Sir</MenuItem>\r\n                                    </Select>\r\n                                    <FormHelperText>{state.errorMessage.Title}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={4}>\r\n                                <TextField\r\n                                    label=\"First Name\"\r\n                                    onChange={handleChange}\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    value={state.firstName}\r\n                                    error={state.errorMessage.firstName !== ''}\r\n                                    helperText={state.errorMessage.firstName}\r\n                                    size=\"small\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={4}>\r\n                                <TextField\r\n                                    label=\"Surname\"\r\n                                    onChange={handleChange}\r\n                                    type=\"text\"\r\n                                    name=\"Surname\"\r\n                                    value={state.Surname}\r\n                                    error={state.errorMessage.Surname !== ''}\r\n                                    helperText={state.errorMessage.Surname}\r\n                                    size=\"small\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={4}>\r\n                                <FormControl error={state.errorMessage.date !== ''} >\r\n                                    <LocalizationProvider dateAdapter={AdapterDateFns} >\r\n                                        <DatePicker\r\n                                            size=\"small\"\r\n                                            label=\"Date of birth\"\r\n                                            value={state.date}\r\n                                            onChange={handleDateChange}\r\n                                            name=\"date\"\r\n                                            error={state.errorMessage.date !== ''}\r\n                                            renderInput={(params) =>\r\n                                                <TextField\r\n                                                    onChange={handleChange}\r\n                                                    error={state.errorMessage.date !== ''}\r\n                                                    {...params} sx={{ mb: 4 }}\r\n                                                    size=\"small\"\r\n                                                    name=\"date\"\r\n                                                />}\r\n                                        />\r\n                                    </LocalizationProvider>\r\n                                    <FormHelperText>{state.errorMessage.date}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={4}>\r\n                                <FormControl sx={{ m: 1, minWidth: isMobile ? '28ch' : '35ch' }} error={state.errorMessage.Role !== ''}>\r\n                                    <InputLabel id=\"demo-simple-select-helper-label\">Role</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-helper-label\"\r\n                                        id=\"demo-simple-select-helper\"\r\n                                        value={state.Role}\r\n                                        label=\"Role\"\r\n                                        onChange={handleChange}\r\n                                        size=\"small\"\r\n                                        name=\"Role\">\r\n                                        <MenuItem value=\"\">\r\n                                            <em>Select...</em>\r\n                                        </MenuItem>\r\n                                        <MenuItem value=\"S\">Intermediary</MenuItem>\r\n                                        <MenuItem value=\"A\">Administrator</MenuItem>\r\n                                        <MenuItem value=\"SU\">Supervisor</MenuItem>\r\n                                    </Select>\r\n                                    <FormHelperText>{state.errorMessage.Role}</FormHelperText>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={12} md={6} lg={4}>\r\n                                <FormControl sx={{ m: 1, minWidth: isMobile ? '28ch' : '35ch' }} error={state.errorMessage.Brand !== ''}>\r\n                                    <InputLabel id=\"demo-simple-select-helper-label\">Which brand(s) are you registering for?</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-helper-label\"\r\n                                        id=\"demo-simple-select-helper\"\r\n                                        value={state.Brand}\r\n                                        label=\"Which brand(s) are you registering for?\"\r\n                                        onChange={handleChange}\r\n                                        size=\"small\"\r\n                                        name=\"Brand\">\r\n                                        <MenuItem value=\"\">\r\n                                            <em>Select...</em>\r\n                                        </MenuItem>\r\n                                        <MenuItem value=\"NBS\">Nationwide</MenuItem>\r\n                                        <MenuItem value=\"TMW\">The Mortgage Works</MenuItem>\r\n                                        <MenuItem value=\"BOTH\">Both</MenuItem>\r\n                                    </Select>\r\n                                    <FormHelperText>{state.errorMessage.Brand}</FormHelperText>\r\n                                </FormControl>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid columns={12} container>\r\n                            <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                                <Alert variant=\"outlined\" severity=\"info\" sx={{ border: 'none', padding: 0, margin: 1 }}>\r\n                                    If you’re already registered with Nationwide or The Mortgage Works and would like to register for a second brand, select ‘Both’.\r\n                                </Alert>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid columns={12} container sx={{\r\n                            mx: 'auto',\r\n                            bgcolor: 'primary.light',\r\n                            color: '#fff',\r\n                            m: 1,\r\n                            borderRadius: 1,\r\n                        }}>\r\n                            <Typography sx={{ m: 1 }}>Company Details</Typography>\r\n                        </Grid>\r\n                        <Grid columns={12} container>\r\n                            <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                                <Alert variant=\"outlined\" severity=\"info\" sx={{ border: 'none', padding: 0, margin: 1 }}>\r\n                                    Please enter your company FCA number and select ‘Search’ to retrieve details from the FCA register.\r\n                                </Alert>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid columns={12} container>\r\n                            <Grid item xs={12} sm={12} md={6} lg={4}>\r\n                                <TextField\r\n                                    label=\"Company FCA number\"\r\n                                    onChange={handleChange}\r\n                                    type=\"text\"\r\n                                    name=\"Company_FCA_number\"\r\n                                    value={state.Company_FCA_number}\r\n                                    error={state.errorMessage.Company_FCA_number !== ''}\r\n                                    helperText={state.errorMessage.Company_FCA_number}\r\n                                    size=\"small\"\r\n                                >\r\n                                </TextField>\r\n\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={8}>\r\n                                <LoadingButton startIcon={<SearchIcon />} sx={{ m: 1 }} variant=\"contained\" \r\n                                loading={fcabuttonloading} \r\n                                loadingPosition=\"start\"\r\n                                disabled={state.Company_FCA_number === ''}\r\n                                color=\"success\" size=\"medium\" onClick={findFCA}>Search</LoadingButton>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid columns={12} container>\r\n                            <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                                <LoadingButton startIcon={<SendIcon />} sx={{ m: 1 }} variant=\"contained\"\r\n                                 disabled ={continuebuttondisabled} \r\n                                 loading={continuebuttonloading} \r\n                                loadingPosition=\"start\" \r\n                                color=\"success\" onClick={handleNext}>Agree & Continue</LoadingButton> \r\n                                <LoadingButton onClick={handleme}>Test Next Button</LoadingButton>                                 \r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default simpleform\r\n","import Box from '@mui/material/Box';\r\nimport React from 'react'\r\nimport Typography from '@mui/material/Typography';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport Grid from '@mui/material/Grid';   \r\nimport { useNavigate  } from 'react-router-dom';\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\n\r\nconst companyDetails =  ({NavigateToNext}) => { \r\n    const navigate = useNavigate();\r\n\r\n    const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\r\n    const handleme= () =>{\r\n        NavigateToNext.NavigateToNext(2)\r\n        navigate(\"/addressdetails\"); \r\n    }\r\n    return (\r\n\r\n        <div>\r\n\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, width: isMobile ? '28ch' : '35ch' },\r\n                    display: 'flex-box'\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            > \r\n                <Grid container\r\n                    spacing={1}\r\n                    columns={12}>\r\n                    <Grid columns={12} container>\r\n                        <Typography sx={{ m: 1 }} variant=\"h5\">Company Details </Typography>\r\n                    </Grid> \r\n                </Grid>\r\n                <LoadingButton onClick={handleme}>Test Next Button</LoadingButton>   \r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\nexport default companyDetails\r\n","import Box from '@mui/material/Box';\r\nimport React from 'react'\r\nimport Typography from '@mui/material/Typography';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport Grid from '@mui/material/Grid';   \r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport { useNavigate  } from 'react-router-dom';\r\n\r\nconst addressDetails = ({NavigateToNext}) => { \r\n    const navigate = useNavigate();\r\n\r\n    const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\r\n    const handleme= () =>{\r\n        NavigateToNext.NavigateToNext(3)\r\n        navigate(\"/contactdetails\"); \r\n    }\r\n    return (\r\n\r\n        <div>\r\n\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, width: isMobile ? '28ch' : '35ch' },\r\n                    display: 'flex-box'\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            > \r\n                <Grid container\r\n                    spacing={1}\r\n                    columns={12}>\r\n                    <Grid columns={12} container>\r\n                        <Typography sx={{ m: 1 }} variant=\"h5\">Address Details</Typography>\r\n                    </Grid> \r\n                </Grid>\r\n                <LoadingButton onClick={handleme}>Test Next Button</LoadingButton>     \r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\nexport default addressDetails\r\n","import Box from '@mui/material/Box';\r\nimport React from 'react'\r\nimport Typography from '@mui/material/Typography';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport Grid from '@mui/material/Grid';   \r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport { useNavigate  } from 'react-router-dom';\r\n\r\nconst submissionRoute = ({NavigateToNext}) => { \r\n    const navigate = useNavigate();\r\n\r\n    const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\r\n    const handleme= () =>{\r\n        NavigateToNext.NavigateToNext(5)\r\n        navigate(\"/confirmation\"); \r\n    }\r\n    return (\r\n\r\n        <div>\r\n\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, width: isMobile ? '28ch' : '35ch' },\r\n                    display: 'flex-box'\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            > \r\n                <Grid container\r\n                    spacing={1}\r\n                    columns={12}>\r\n                    <Grid columns={12} container>\r\n                        <Typography sx={{ m: 1 }} variant=\"h5\">Submission Route(s) </Typography>\r\n                    </Grid> \r\n                </Grid>\r\n                <LoadingButton onClick={handleme}>Test Next Button</LoadingButton> \r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\nexport default submissionRoute\r\n","import Box from '@mui/material/Box';\r\nimport React from 'react'\r\nimport Typography from '@mui/material/Typography';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport Grid from '@mui/material/Grid';   \r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport { useNavigate  } from 'react-router-dom';\r\n\r\nconst contactDetails = ({NavigateToNext}) => { \r\n    const navigate = useNavigate();\r\n\r\n    const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\r\n    const handleme= () =>{\r\n        NavigateToNext.NavigateToNext(4)\r\n        navigate(\"/submissionroute\"); \r\n    }\r\n    return (\r\n\r\n        <div>\r\n\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, width: isMobile ? '28ch' : '35ch' },\r\n                    display: 'flex-box'\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            > \r\n                <Grid container\r\n                    spacing={1}\r\n                    columns={12}>\r\n                    <Grid columns={12} container>\r\n                        <Typography sx={{ m: 1 }} variant=\"h5\">Contact Details </Typography>\r\n                    </Grid> \r\n                </Grid>\r\n                <LoadingButton onClick={handleme}>Test Next Button</LoadingButton>  \r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\nexport default contactDetails\r\n","import Box from '@mui/material/Box';\r\nimport React from 'react'\r\nimport Typography from '@mui/material/Typography';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport Grid from '@mui/material/Grid';    \r\n\r\nconst confirmationtDetails = () => {  \r\n    const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\r\n \r\n    return (\r\n\r\n        <div>\r\n\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, width: isMobile ? '28ch' : '35ch' },\r\n                    display: 'flex-box'\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            > \r\n                <Grid container\r\n                    spacing={1}\r\n                    columns={12}>\r\n                    <Grid columns={12} container>\r\n                        <Typography sx={{ m: 1 }} variant=\"h5\">Confirmation</Typography>\r\n                    </Grid> \r\n                </Grid> \r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\nexport default confirmationtDetails\r\n","\r\nimport * as React from 'react';\r\nimport AppRegistrationIcon from '@mui/icons-material/AppRegistration';\r\nimport ConfirmationNumberIcon from '@mui/icons-material/ConfirmationNumber';\r\nimport BusinessIcon from '@mui/icons-material/Business';\r\nimport ImportContactsIcon from '@mui/icons-material/ImportContacts';\r\nimport ContactsIcon from '@mui/icons-material/Contacts';\r\nimport DirectionsIcon from '@mui/icons-material/Directions';\r\nimport SimpleForm from './SimpleForm';\r\nimport CompanyDetails from './CompanyDetails';\r\nimport AddressDetails from './AddressDetails';\r\nimport SubmissionRoute from './SubmissionRoute';\r\nimport ContactDetails from './ContactDetails';\r\nimport ConfirmationDetails from './ConfirmationDetails';\r\n\r\nfunction RoutesData(NavigateToNext)\r\n{\r\n  return (\r\n    {\r\n  menuitem:\r\n  [\r\n   {menucaption : \"Registration Details\",menupath : \"/registrationdetails\",icon:<AppRegistrationIcon  color=\"primary\" />,routedata:<SimpleForm NavigateToNext = {NavigateToNext}/>,disabled:false,selected:true},\r\n   {menucaption : \"Company Name\", menupath : \"/companyname\",icon:<BusinessIcon  color=\"primary\"  />,routedata: <CompanyDetails  NavigateToNext = {NavigateToNext}/>,disabled:true,selected:false},\r\n   {menucaption : \"Address Details\", menupath : '/addressdetails',icon:<ImportContactsIcon  color=\"primary\"  />,routedata:<AddressDetails NavigateToNext = {NavigateToNext}/>,disabled:true,selected:false},\r\n   {menucaption : \"Contact Details\",menupath : '/contactdetails',icon:<ContactsIcon  color=\"primary\"  />,routedata:<ContactDetails NavigateToNext = {NavigateToNext}/>,disabled:true,selected:false},\r\n   {menucaption : \"Submission Route(s)\",menupath : '/submissionroute',icon:<DirectionsIcon  color=\"primary\"  />,routedata:<SubmissionRoute NavigateToNext = {NavigateToNext}/>,disabled:true,selected:false},\r\n   {menucaption : \"Confirmation\",menupath : '/confirmation',icon:<ConfirmationNumberIcon  color=\"primary\"  />,routedata:<ConfirmationDetails NavigateToNext = {NavigateToNext}/>,disabled:true,selected:false}\r\n  ]})\r\n}\r\n\r\nexport default RoutesData;","\r\nimport Link from \"@mui/material/Link\";\r\nimport logo from \"./main_logo_left.png\";\r\nimport './App.css'; \r\nimport  React  from 'react';\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'; \r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';  \r\nimport RoutesData from './pages/menudata'\r\nimport PropTypes from 'prop-types'; \r\nimport { useMediaQuery } from 'react-responsive'; \r\nimport { \r\n  Link as RouterLink,\r\n  Route,\r\n  Routes,\r\n  MemoryRouter,\r\n  useLocation\r\n} from 'react-router-dom';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport { StaticRouter } from 'react-router-dom/server.mjs'; \r\n\r\nfunction Router(props) {\r\n  const { children } = props;\r\n  if (typeof window === 'undefined') {\r\n    return <StaticRouter location=\"/registrationdetails\">{children}</StaticRouter>;\r\n  }\r\n  \r\n  return (\r\n    <MemoryRouter initialEntries={['/registrationdetails']} initialIndex={0}>\r\n      {children}\r\n    </MemoryRouter>\r\n  );\r\n}\r\n\r\nRouter.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\nconst drawerWidth = 240;\r\n\r\nconst openedMixin = (theme) => ({\r\n  width: drawerWidth,\r\n  transition: theme.transitions.create('width', {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.enteringScreen,\r\n  }),\r\n  overflowX: 'hidden',\r\n});\r\n\r\nconst closedMixin = (theme) => ({\r\n  transition: theme.transitions.create('width', {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  overflowX: 'hidden',\r\n  width: `calc(${theme.spacing(7)} + 1px)`,\r\n  [theme.breakpoints.up('sm')]: {\r\n    width: `calc(${theme.spacing(9)} + 1px)`,\r\n  },\r\n});\r\n\r\nconst DrawerHeader = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-end',\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n}));\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== 'open',\r\n})(({ theme, open }) => ({\r\n  zIndex: theme.zIndex.drawer + 1,\r\n  transition: theme.transitions.create(['width', 'margin'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  })\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\r\n  ({ theme, open }) => ({\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n    boxSizing: 'border-box',\r\n    ...(open && {\r\n      ...openedMixin(theme),\r\n      '& .MuiDrawer-paper': openedMixin(theme),\r\n    }),\r\n    ...(!open && {\r\n      ...closedMixin(theme),\r\n      '& .MuiDrawer-paper': closedMixin(theme),\r\n    }),\r\n  }),\r\n);\r\n\r\nfunction ListItemLink(props) {\r\n  const { icon, primary, to ,onclick,Selected,Disabled} = props;\r\n\r\n  const renderLink = React.useMemo(\r\n    () =>\r\n      React.forwardRef(function Link(itemProps, ref) {\r\n        return <RouterLink to={to} ref={ref} {...itemProps} role={undefined} onClick ={onclick} selected = {Selected} disabled = {Disabled}/>;\r\n      }),\r\n    [to],\r\n  );\r\n\r\n  return (\r\n    <li>\r\n      <ListItemButton component={renderLink} onClick={onclick} selected={Selected} disabled = {Disabled}>\r\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\r\n        <ListItemText primary={primary} />\r\n      </ListItemButton>\r\n    </li>\r\n  );\r\n}\r\n\r\nListItemLink.propTypes = {\r\n  icon: PropTypes.element,\r\n  primary: PropTypes.string.isRequired,\r\n  to: PropTypes.string.isRequired,\r\n};\r\n\r\nfunction GetRouteElem(NavigateToNext)\r\n{ \r\n const pathlocation = useLocation();\r\n var data = RoutesData(NavigateToNext).menuitem.find((e) => e.menupath === pathlocation.pathname)\r\n return (data.routedata);\r\n} \r\nexport default function MiniDrawer() {  \r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\r\n  const [open, setOpen] = React.useState(!isMobile); \r\n  const handleDrawerOpen = () => {\r\n    setOpen(!open);\r\n  }; \r\n  const handleDrawerClose = () => {\r\n    setOpen(!open);\r\n  }; \r\n  const [disabledIndex, setDisabledIndex] = React.useState(0);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n  const handleListItemClick = (index) => {     \r\n    setSelectedIndex(index);    \r\n  }; \r\n\r\n  function NavigateToNext(index)\r\n  {\r\n    setSelectedIndex(index); \r\n    setDisabledIndex(disabledIndex>= index ? disabledIndex:index);\r\n  }\r\n   \r\n  return (\r\n    <Box sx={{ display: 'flex' }}>\r\n       <Router>\r\n      <CssBaseline />  \r\n      <AppBar position=\"fixed\" open={open}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"             \r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <img alt=\"Nationwide Logo\" src={logo} className=\"App-logo\" />\r\n          <Typography variant=\"h6\" noWrap component=\"div\">\r\n           <Link underline=\"none\" color=\"inherit\" className=\"App-name\" href=\"#\"> MSO Registration</Link>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>    \r\n      <Drawer variant=\"permanent\" open={open}>\r\n        <DrawerHeader>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </DrawerHeader>\r\n        <Divider /> \r\n        <List>\r\n          {RoutesData(NavigateToNext).menuitem.map((menuitem, index) => (\r\n           <ListItemLink to={menuitem.menupath} primary={menuitem.menucaption} icon={menuitem.icon}\r\n             key={menuitem.menucaption} \r\n             onclick={(event) => handleListItemClick(index)}\r\n             Selected = {selectedIndex === index}\r\n             Disabled = {!(index === disabledIndex || index < disabledIndex)} />\r\n          ))}\r\n        </List>  \r\n      </Drawer>\r\n      <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\r\n        <DrawerHeader /> \r\n        <Routes >\r\n          <Route path=\"*\" element={<GetRouteElem NavigateToNext = {NavigateToNext}/>} />\r\n        </Routes> \r\n      </Box> \r\n      </Router>\r\n    </Box>\r\n  );\r\n}\r\n\r\n        ","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { StyledEngineProvider } from '@mui/material/styles'; \r\nimport SideNav from './SideNav'; \r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as serviceWorker from './serviceWorker';\r\nReactDOM.render(\r\n  <StyledEngineProvider injectFirst>\r\n    <SideNav />\r\n  </StyledEngineProvider>,\r\n  document.getElementById('root')\r\n);\r\n \r\nserviceWorker.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}